import os
import wave
import json
import pyaudio
from vosk import Model, KaldiRecognizer

def get_model(language):
    models = {
        "english": "models/vosk-model-small-en-us-0.15",
        "russian": "models/vosk-model-small-ru-0.22"
    }
    
    if language not in models:
        raise ValueError("Invalid language selected. Please enter 'english' or 'russian'.")
    
    model_path = models[language]
    if not os.path.exists(model_path):
        raise FileNotFoundError(f"Please download the model for {language} and unpack it as 'model' in the specified folder.")
    
    return Model(model_path)

def save_error_data(original_text, recognized_text):
    with open("error_log.txt", "a") as f:
        f.write(f"Original: {original_text}\nRecognized: {recognized_text}\n\n")

def recognize_from_file(model, file_path):
    wf = wave.open(file_path, "rb")
    if wf.getnchannels() != 1 or wf.getsampwidth() != 2 or wf.getcomptype() != "NONE":
        raise ValueError("Audio file must be WAV format mono PCM.")

    rec = KaldiRecognizer(model, wf.getframerate())

    while True:
        data = wf.readframes(4000)
        if len(data) == 0:
            break
        if rec.AcceptWaveform(data):
            result = json.loads(rec.Result())
            print(result)
            if "text" in result:
                original_text = input("Enter the correct text (or press Enter if correct): ").strip()
                if original_text and original_text != result["text"]:
                    save_error_data(original_text, result["text"])
        else:
            partial_result = rec.PartialResult()
            print(partial_result)

    final_result = json.loads(rec.FinalResult())
    print(final_result)
    if "text" in final_result:
        original_text = input("Enter the correct text (or press Enter if correct): ").strip()
        if original_text and original_text != final_result["text"]:
            save_error_data(original_text, final_result["text"])

    wf.close()

def recognize_from_microphone(model):
    rec = KaldiRecognizer(model, 16000)

    p = pyaudio.PyAudio()
    stream = p.open(format=pyaudio.paInt16, channels=1, rate=16000, input=True, frames_per_buffer=8000)
    stream.start_stream()

    wf = wave.open("microphone_output.wav", 'wb')
    wf.setnchannels(1)
    wf.setsampwidth(p.get_sample_size(pyaudio.paInt16))
    wf.setframerate(16000)

    print("Listening...")

    try:
        while True:
            data = stream.read(4000, exception_on_overflow=False)
            wf.writeframes(data)
            if len(data) == 0:
                break
            if rec.AcceptWaveform(data):
                result = json.loads(rec.Result())
                print(result)
                if "text" in result:
                    original_text = input("Enter the correct text (or press Enter if correct): ").strip()
                    if original_text and original_text != result["text"]:
                        save_error_data(original_text, result["text"])
            else:
                partial_result = rec.PartialResult()
                print(partial_result)
    except KeyboardInterrupt:
        print("Stopped by user")

    wf.close()
    stream.stop_stream()
    stream.close()
    p.terminate()
